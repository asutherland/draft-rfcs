<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3501 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3501.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC4234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4234.xml">
<!ENTITY RFC4466 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4466.xml">
<!ENTITY RFC4551 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4551.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC5256 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5256.xml">
<!ENTITY RFC5322 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5322.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-banks-imap-conversations-00"
    updates="3501" ipr="trust200902">

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="IMAP4 - Conversations">Internet Message Access
    Protocol Version 4 - Extension for Conversations</title>

    <author fullname="Greg Banks" initials="G.B." role="editor"
            surname="Banks">
      <organization>Opera Software Australia Pty. Ltd.</organization>

      <address>
        <postal>
          <street>Level 1, 91 William St</street>
          <city>Melbourne</city>
          <region>Victoria</region>
          <code>3000</code>
          <country>Australia</country>
        </postal>

        <email>gnb@opera.com</email>

      </address>
    </author>

    <date year="2012" month="May" day="28"/>

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>IMAP</keyword>
    <keyword>conversations</keyword>

    <abstract>
      <t>The XCONVERSATIONS extension to the Internet Message Access
      Protocol allows messages to be linked into conversations, automatically
      efficiently and persistently, and entirely in the server.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>A server advertising the XCONVERSATIONS capability tracks
      conversation (i.e. message threading)  information automatically
      and persistently, and provides ways for a client to present to
      users both complete new views and efficient updates to existing
      views of conversations.</t>

      <section title="Requirements Language">
	<t>In examples, "C:" and "S:" indicate lines sent by the client
	and server, respectively.</t>

        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section anchor="Data_Model" title="Data Model">

      <section anchor="Conversations" title="Conversations">

	<t>Conversations are groups of messages automatically connected
	together by the server.  In this sense they are like threads as
	defined by the THREAD command <xref target="RFC5256" /> or
	implemented by various modern clients, but with the following
	important differences.<list style="symbols">

	  <t>Conversations are a flat unordered group without the tree
	  structure of threads.</t>

	  <t>Conversations are cross-folder, so that e.g. related
	  messages in a user's Inbox, Sent and Drafts folders can all
	  be connected into one conversation.</t>

	  <t>Conversations are constructed entirely by the server,
	  without client involvement, and in particular without the
	  client needing to download or cache the headers of every
	  single message.</t>

	  <t>Conversations are persistent and updated by the server at
	  message delivery time, rather than when the client connects,
	  so all the information is present without delay when the client
	  connects.</t>

	</list>
	</t>

	<t>Conversations are intended for advanced clients to display
	directly to the user as the basic units of folder structure,
	i.e. a client MAY present a folder as a sequence of
	conversations.  Conversations are not intended to replace the
	fundamental IMAP concept of folders entirely, but to augment
	them.  </t>

      </section>
      <section anchor="Scope" title="Scope">

	<t>Conversations are unique within some scope, known as the
	conversation scope.</t>

	<t>An IMAP folder is associated with at most one conversation
	scope.  All messages in a given folder MUST be in the same
	conversation scope.  That scope MUST NOT change while a folder's
	UIDVALIDITY does not change; if a folder's conversation scope
	changes the UIDVALIDITY MUST also change.</t>

	<t>A folder MAY have no scope at all, in which case all the
	messages in the folder MUST NOT belong to any conversation.  A
	server MAY decide automatically to treat any particular folder
	this way, e.g. a Spam or Trash folder.</t>

	<t>A server SHOULD assign all of a user's folders to the same
	conversation scope, which is only available to that user.</t>

      </section>
      <section anchor="CIDs" title="CIDs">

	<t>Conversations are identified by Conversation IDs (CIDs).  A
	CID uniquely identifies a conversation in a given conversation
	scope.</t>

	<t>A CID is lexically an &lt;atom&gt; or NIL, which represents
	no conversation at all.  A server MUST NOT assign NIL as the ID
	of a conversation.</t>

	<t>CIDs are created by the server automatically, and are opaque
	to the client.  The details of their format are not defined
	here.  The client MUST NOT interpret CIDs in any way, except to
	compare them case-sensitively for uniqueness.  In all other
	respects, CIDs are opaque tokens whose only purpose is to be
	passsed back to the server.  In particular, clients MUST not
	make any assumptions about ordinality of CIDs.</t>

	<t>Each message has a property, formally a CID, which identifies
	the conversation to which the message is associated (or NIL if
	the message is not associated with any conversation).  This
	property is automatically assigned by the server and is
	read-only to the client.  No protocol mechanism is provided to
	change the CID.  However, note that the CID property is mutable.
	A server MAY change the CID of a message under certain rare
	circumstances (e.g. when <xref target="Merging">Merging
	Conversations</xref>), but doing so MUST increase the message's
	MODSEQ.</t>

	<!-- TODO: guidelines for a server to choose cids - stability,
	    repeatability, uniqueness, easy representation -->

      </section>
      <section anchor="Properties" title="Conversation Properties">

	<t>In addition to being groups of messages, conversations are
	also first class objects with some persistent properties of
	their own.  These properties are maintained automatically by the
	server, and are read-only to the client.
	<list style="symbols">

	<t>A list of folders containing messages which are in the
	conversation, known as FOLDERS.</t>
	<t>A list of addresses from which messages in the conversation
	have been sent, known as SENDERS.</t>
	<t>A modseq value.</t>
	<t>Several counters which track how many messages in the
	conversation are in various states.</t>

	<!-- TODO: really only MODSEQ is not derived from the messages -->

	</list>
	</t>

      </section>
      <section anchor="Inserting" title="Inserting a New Message">

	<t>When a message arrives in the server via any means, the
	server MUST associate the message with a conversation.  This
	process includes the following steps.
	<list style="symbols">

	  <t>The server parses the message to discover the values of
	  certain header fields.</t>

	  <t>The server uses those values to look up zero or more
	  existing conversations in the conversations scope of the
	  message.  The server SHOULD use the message ids in the
	  Message-Id, In-Reply-To and References header fields and
	  search for conversations with messages which list those ids in
	  their Message-Id, In-Reply-To or References header fields.
	  The server MAY also apply other criteria designed to make
	  conversations more friendly to humans, such as matching the
	  Subject header field, or limiting the length of conversations.
	  </t>

	  <t>Depending on how many conversations were found, the server
	  MUST take one of these actions to choose a single
	  conversation.
	  <list style="symbols">

	    <t>If zero existing conversations were found, the server
	    MUST create a new conversation and use that.</t>

	    <t>If one existing conversation was found, the server MUST
	    use that conversation.</t>

	    <t>If two or more existing conversations were found, the
	    server merges the conversations <xref target="Merging" /> to
	    create a single resulting conversation and uses that.</t>

	  </list>
	  The server sets the message's CID attribute to the CID of
	  the chosen conversation, and updates the conversation state to
	  account for the message.</t>

	</list></t>
      </section>
      <section anchor="Merging" title="Merging Conversations">

	<t>The server MUST, under some rare circumstances, be able to
	merge two or more conversations together.</t>

	<t>One simple example is when particular combinations of
	messages arrive out of order.  Imagine three messages like
	this:</t>

	<figure>
	  <artwork type="ascii">
Message-Id: &lt;a&gt;
Subject: Hello World

Message-Id: &lt;b&gt;
In-Reply-To: &lt;a&gt;
Subject: Re: Hello World

Message-Id: &lt;c&gt;
In-Reply-To: &lt;b&gt;
Subject: Re: Re: Hello World
	  </artwork>
	</figure>

	<t>Now imagine that the messages arrive in the order &lt;a&gt;,
	&lt;c&gt;, &lt;b&gt;.  When message &lt;a&gt; is delivered, the
	server associates it with a new conversation A.  When message
	&lt;c&gt; is delivered, there is no detectable connection to
	message &lt;a&gt;, so the server associates &lt;c&gt; with a new
	conversation C.  When message &lt;b&gt; finally arrives, the
	message ids indicate that it should be associated to both
	conversations B and C.  As a message can only be associated with
	at most one conversation, the conversations will need to be
	merged.</t>

	<t>When the server decides that a newly inserted message
	belongs in two or more conversations, it MUST merge those two
	conversations together into one larger conversation.  However
	the server MAY split those conversations again to enforce a
	limit on conversation size.</t>

	<!-- TODO: defending against malicious conversation joining -->

	<t>Merging a conversations involves the following steps.
	<list style="symbols">

	  <t>The server chooses a final conversation.  The server SHOULD
	  choose one of the existing conversations rather than create an
	  entirely new conversation.</t>

	  <t>The server MUST re-associate the messages in all the
	  conversations to be merged, with the final conversation.  In
	  the case that the message is already in the final
	  conversation, this is a no-op.  In the case that the message
	  is in another conversation, the server MUST update the
	  message's CID property and increase the message's MODSEQ
	  value.</t>

	  <t>The server MUST merge the FOLDERS and SENDERS information,
	  and any counters from all the conversations into the final
	  conversation.</t>

	  <!-- TODO: convmodseq -->

	  <t>Finally the server MUST delete the non-final conversations,
	  so that they are not visible again from any IMAP command.
	  The server MAY re-use the CID for an entirely new conversation
	  at some time in the future.</t>

	</list></t>

      </section>
    </section>
    <section anchor="ProtocolChanges" title="IMAP Protocol Changes">
      <section anchor="General" title="General Considerations">
      </section>
      <section anchor="FETCH_Command" title="New Message Data Items in FETCH Command">
      </section>
      <section anchor="FETCH_Response" title="New Message Data Items in FETCH Response">
      </section>
      <section anchor="Delivery" title="Interaction with Message Delivery">

	<t>When a message arrives in the server via any delivery mechanism
	(i.e. not via the IMAP protocol), the server MUST associate the message
	with a conversation as described in <xref target="Inserting" />.</t>
	<!-- reference to SMTP. LMTP -->

      </section>
      <section anchor="COPY" title="Interaction with COPY">

	<t>When a message is added to a folder using the COPY command, the
	server MUST associate the message with a conversation as described
	in <xref target="Inserting" />.</t>

	<t>Note that if a message is copied to a folder in the same
	conversation scope as the original folder, the new message SHOULD
	end up in the same conversation as the original.</t>

	<t>TODO: exception: the server MAY split conversations which are
	too large.</t>

      </section>
      <section anchor="APPEND" title="Interaction with APPEND">

	<t>When a message is added to the server using the APPEND command,
	the server MUST associate the message with a conversation as
	described in <xref target="Inserting" />.</t>

      </section>
      <section anchor="MOVE" title="Interaction with MOVE">

	<t>A server MAY implement both this extension and the MOVE
	extension <xref target="draft-MOVE" />.</t>

	<t>When a message is moved from one folder to another folder in
	the same conversation scope using the MOVE command, the server
	MUST preserve the association between the message and it's
	conversation.</t>

	<t>When a message is moved from one folder to a folder in a
	different conversation scope using the MOVE command, the server
	MUST drop any association between the message and a conversation
	and associate the message with a conversation in the new scope
	as described in <xref target="Inserting" />.</t>

      </section>
      <section anchor="EXPUNGE" title="Interaction with EXPUNGE">
      </section>
      <section anchor="RENAME" title="Interaction with RENAME">
      </section>
      <section anchor="DELETE" title="Interaction with STORE">
      </section>
      <section anchor="SEARCH" title="New Criteria in SEARCH">
      </section>
      <section anchor="SORT" title="New Keys in SORT">
      </section>
      <section anchor="STATUS" title="New Items in STATUS">
      </section>
      <section anchor="XCONVMETA" title="New Command XCONVMETA">
      </section>
      <section anchor="XCONVFETCH" title="New Command XCONVFETCH">
      </section>
      <section anchor="XCONVSORT" title="New Command XCONVSORT">
      </section>
      <section anchor="XCONVUPDATES" title="New Command XCONVUPDATES">
      </section>
    </section>
    <section anchor="Syntax" title="Formal Syntax">

      <t>The following syntax specification uses the Augmented
      Backus-Naur Form (ABNF) notation as specified in <xref
      target="RFC4234" />.</t>

      <t>Non-terminals referenced but not defined below are as defined
      by <xref target="RFC3501" />, or <xref target="RFC4466" />.</t>

      <t>Except as noted otherwise, all alphabetic characters are
      case-insensitive.  The use of upper or lowercase characters to
      define token strings is for editorial clarity only.
      Implementations MUST accept these strings in a case-insensitive
      fashion.</t>

      <figure>
<artwork type="abnf"><![CDATA[capability =/ "XCONVERSATIONS"

command-auth =/ convfetch / convmeta

command-select =/ convsort / convupdates

;convsort = "XCONVSORT" SP sort-criteria
;           [SP convsort-windowargs] SP search-criteria
;    ;; sort-criteria defined in RFC5256
;    ;; search-criteria defined in RFC5256, includes initial charset
;
;convsort-windowargs = '(' convsort-windowarg
;                       (SP convsort-windowarg)* ')'
;
;convsort-windowarg = "CONVERSATIONS" /
;                     "POSITION" SP '(' nz-number SP number ')' /
;                     "ANCHOR" SP '(' uniqueid SP number SP number ')'
;                        ;; position limit
;                        ;; anchor offset limit
;
;convupdates = "XCONVUPDATES" SP sort-criteria
;               SP convupdates-windowargs SP search-criteria
;    ;; sort-criteria defined in RFC5256
;    ;; search-criteria defined in RFC5256, includes initial charset
;
;convupdates-windowargs = '(' convupdates-windowarg
;                             (SP convupdates-windowarg)* ')'
;
;convupdates-windowarg = "CONVERSATIONS" /
;                        "CHANGEDSINCE" SP '('
;                            mod-sequence-value SP ;; highestmodseq
;                            uniqueid ')' /        ;; uidnext
;                        "UPTO" SP '(' uniqueid ')'
;    ;; mod-sequence-value is defined in RFC4551
;    ;; number and nz-number are defined in RFC3501
;
;;; Note: CHANGEDSINCE is mandatory for xconvupdates]]></artwork>
      </figure>

    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This template was derived from an initial version written by Pekka
      Savola and contributed by him to the xml2rfc project.</t>

      <!--
      <t>This document is part of a plan to make xml2rfc indispensable <xref
      target="DOMINATION"></xref>.</t>
      -->
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>

      <t>All drafts are required to have an IANA considerations section (see
      <xref target="RFC5226">Guidelines for Writing an IANA Considerations Section in RFCs</xref> for a guide). If the draft does not require IANA to do
      anything, the section contains an explicit statement that this is the
      case (as above). If there are no requirements for IANA, the section will
      be removed during conversion into an RFC by the RFC Editor.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>All drafts are required to have a security considerations section.
      See <xref target="RFC3552">RFC 3552</xref> for a guide.</t>
    </section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!-- Key words for use in RFCs to Indicate Requirement Levels -->
      &RFC2119;

      <!-- INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1 -->
      &RFC3501;

      <!-- Guidelines for Writing RFC Text on Security Considerations -->
      &RFC3552;

      <!-- Augmented BNF for Syntax Specifications: ABNF -->
      &RFC4234;

      <!-- Collected Extensions to IMAP4 ABNF -->
      &RFC4466;

      <!-- IMAP Extension for Conditional STORE -->
      &RFC4551;

      <!-- Guidelines for Writing an IANA Considerations Section in RFCs -->
      &RFC5226;

      <!-- Internet Message Access Protocol - SORT and THREAD Extensions -->
      &RFC5256;

      <!-- Internet Message Format -->
      &RFC5322;

      <reference anchor="draft-MOVE">
        <front>
          <title>Internet Message Access Protocol (IMAP) - MOVE extension</title>

          <author initials="W." surname="Krecicki">
            <organization></organization>
          </author>

          <date year="2010" />
        </front>
	<format type="HTML" target="http://tools.ietf.org/id/draft-krecicki-imap-move-00.html"/>
	<format type="TXT" target="http://tools.ietf.org/id/draft-krecicki-imap-move-00.txt"/>
      </reference>

        <!-- the following is the minimum to make xml2rfc happy -->
	<!--
      <reference anchor="min_ref">

        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference>
      -->
    </references>

    <!--
    <references title="Informative References">
    </references>
    -->

  </back>
</rfc>
